import sqlite3
import telebot
import requests
import datetime

from pyexpat.errors import messages
from utilits.logger import commands_bot
from telebot import types
from bot_instance import bot, API_weather
from utilits.assets import stickers, emoji, icon_to_emoji

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
def weather(message):
    # —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É
    res_current_weather = requests.get(f'https://ru.api.openweathermap.org/data/2.5/weather?q=Moscow&appid={API_weather}&units=metric&lang=ru')
    bot.reply_to(message, f'–ü–æ–≥–æ–¥–∞ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç: {res_current_weather.json()}')

def information(message):
    # –í—ã–≤–æ–¥–∏—Ç –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ —á–∞—Ç–µ
    bot.send_message(message.chat.id, message)

def site_with_weather(message):
    # —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–∞–π—Ç —Å –ø–æ–≥–æ–¥–æ–π
    webbrowser.open('https://openweathermap.org/weathermap')

def commands(message):
    # —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
    commands_list = '\n'.join(commands_bot)
    bot.send_message(message.chat.id, commands_list)

def user_name(message):
    name = message.text.strip()

    conn = sqlite3.connect('../database/users_db.sql')
    cur = conn.cursor()

    cur.execute('INSERT INTO users (id, name) VALUES (?, ?)', (message.from_user.id, name))

    conn.commit()
    cur.close()
    conn.close()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    confirmation_message = f"–°–ø–∞—Å–∏–±–æ, {name}! –í–∞—à–µ –∏–º—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ."
    bot.send_message(message.chat.id, confirmation_message, parse_mode='html')

    # –ü–ï–†–ï–°–¢–ê–í–ò–¢–¨ BUTTON –¢–ê–ö, –ß–¢–û–ë–´ –û–ù–ò –ü–û–Ø–í–õ–Ø–õ–ò–°–¨ –ü–û–°–õ–ï –í–í–û–î–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ú –í–°–ï–ô –ò–ù–§–û–†–ú–ê–¶–ò–ò
    buttons(message)

def buttons(message):
    # —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    markup = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True, one_time_keyboard=True)
    weather_button = types.KeyboardButton('–ü–æ–≥–æ–¥–∞')
    news_button = types.KeyboardButton('–ù–æ–≤–æ—Å—Ç–∏')
    markup.row(weather_button, news_button)
    bot.send_message(message.chat.id, "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è?", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '–ü–æ–≥–æ–¥–∞')
def show_weather(message):
    # –í—ã–≤–æ–¥–∏–º –ø–æ–≥–æ–¥—É
    res_current_weather = requests.get(
        f'https://ru.api.openweathermap.org/data/2.5/weather?q=Moscow&appid={API_weather}&units=metric&lang=ru'
    )
    weather_data = res_current_weather.json()

    city = weather_data['name']
    temp = weather_data['main']['temp']
    feels_like = weather_data['main']['feels_like']
    weather_description = weather_data['weather'][0]['description']
    wind_speed = weather_data['wind']['speed']
    visibility = weather_data['visibility']
    humidity = weather_data['main']['humidity']
    sunrise_timestamp = datetime.datetime.fromtimestamp(weather_data["sys"]["sunrise"])
    sunset_timestamp = datetime.datetime.fromtimestamp(weather_data["sys"]["sunset"])
    pressure = weather_data['main']['pressure']

    weather_icon = weather_data['weather'][0]['icon']
    weather_emoji = icon_to_emoji.get(weather_icon, "")

    message_lines = []
    message_lines.append(f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {city}: {temp} ¬∞C {weather_emoji}")
    message_lines.append(f"–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like} ¬∞C")

    # –í—ã–≤–æ–¥ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–≥–æ–¥—ã —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ —ç–º–æ–¥–∑–∏
    message_lines.append(f"{weather_description.capitalize()} {weather_emoji}")

    # –í—ã–≤–æ–¥ –¥–∞–≤–ª–µ–Ω–∏—è
    message_lines.append(f'–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –º–º.—Ä—Ç.—Å—Ç.')

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä
    if wind_speed > 5:
        message_lines.append(f"–û–∂–∏–¥–∞–µ—Ç—Å—è —Å–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä: {wind_speed} –º/c üí®")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–ª–∞–∂–Ω–æ—Å—Ç—å
    if humidity <= 50:
        message_lines.append(f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%, –ø–æ–Ω–∏–∂–µ–Ω–Ω–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å üåµ')
    elif humidity >= 70:
        message_lines.append(f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%, –ø–æ–≤—ã—à–µ–Ω–Ω–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å üí¶')

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫—É—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É
    if temp >= 30:
        message_lines.append(f'‚ùó –í—ã—Å–æ–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp} ü•µ')
    elif temp <= -25:
        message_lines.append(f'‚ùó –ù–∏–∑–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp} ü•∂')

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∏–¥–∏–º–æ—Å—Ç—å
    if visibility < 500:
        message_lines.append(f"‚ö†Ô∏è –í–∏–¥–∏–º–æ—Å—Ç—å —Å–∏–ª—å–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞: {visibility} –º ‚ö†Ô∏è")
    elif visibility < 1000:
        message_lines.append(f"‚ö†Ô∏è –í–∏–¥–∏–º–æ—Å—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞: {visibility} –º ‚ö†Ô∏è")

    # –í—ã–≤–æ–¥ –∑–∞–∫–∞—Ç–∞ –∏ –≤–æ—Å—Ö–æ–¥–∞ —Å–æ–ª–Ω—Ü–∞
    sunrise_formatted = sunrise_timestamp.strftime("%H:%M")
    sunset_formatted = sunset_timestamp.strftime("%H:%M")
    message_lines.append('\n')
    message_lines.append(f"üåÖ –í–æ—Å—Ö–æ–¥: {sunrise_formatted}")
    message_lines.append(f"üåá –ó–∞–∫–∞—Ç: {sunset_formatted}")

    # –í –î–†–£–ì–û–ú https://openweathermap.org/forecast5 (Forecast) –º–æ–∂–Ω–æ –≤—ã–≤–æ–¥–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 4 —á–∞—Å–∞


    final_message = '\n'.join(message_lines)

    bot.send_message(message.chat.id, final_message)



#  –£–î–ê–õ–ò–¢–¨ –ü–û–¢–û–ú, –¢–ê–ö –ö–ê–ö –§–£–ù–ö–¶–ò–Ø –í–´–í–û–î–ò–¢ –í–°–Æ –ë–î

def print_all_users(message):
    # —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∏—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    markup = telebot.types.InlineKeyboardMarkup()
    markup.add(telebot.types.InlineKeyboardButton('–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', callback_data='users'))
    bot.send_message(message.chat.id, '–í—ã –º–æ–∂–µ—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    conn = sqlite3.connect('../database/users_db.sql')
    cur = conn.cursor()
    cur.execute('SELECT * FROM users')
    users = cur.fetchall()

    info = ''
    for el in users:
        info += (f'Id: {el[0]}, –ò–º—è: {el[1]}\n')

    cur.close()
    conn.close()

    bot.send_message(call.message.chat.id, info)